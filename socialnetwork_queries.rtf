{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
/* Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade.\
*/\
\
SELECT name, grade FROM highschooler hs \
	WHERE hs.hs_id NOT IN (SELECT l.ID1 FROM likes l) && hs.hs_id NOT IN (SELECT l.ID2 FROM likes l)\
	GROUP BY name\
	ORDER BY grade, name;\
/*\
3. Find the difference between the number of students in the school and the number of different first names.\
\
*/\
\
SELECT COUNT(*) - COUNT(DISTINCT name) FROM highschooler;\
\
/* 4. What is the average number of friends per student? (Your result should be just one number.)\
\
*/\
\
SELECT 	(SELECT COUNT(*) FROM friend) /\
		(SELECT COUNT(hs_ID) FROM highschooler hs);\
\
/*5. Find the number of students who are either friends with Cassandra or are friends of friends of Cassandra. Do not count Cassandra, even though technically she is a friend of a friend.\
*/\
\
SELECT count(*) FROM friend WHERE ID1 IN (SELECT ID2 FROM friend WHERE ID2 IN (SELECT ID2 FROM friend WHERE ID1 = 4));\
\
\
/* 6. Find the name and grade of the student(s) with the greatest number of friends.\
*/\
\
SELECT DISTINCT name, grade FROM highschooler hs JOIN friend f ON hs.hs_id = f.ID1 \
	WHERE ((SELECT count(*) FROM friend f WHERE f.ID1 = hs.hs_id GROUP BY f.ID1) = (SELECT MAX((SELECT COUNT(*) FROM friend f WHERE f.ID1 = hs.hs_id GROUP BY f.ID1)) from highschooler hs));}